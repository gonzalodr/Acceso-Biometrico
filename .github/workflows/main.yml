# .github/workflows/main.yml
name: Pruebas Python

on:
  push:
    branches:
      - main
      - Gonzalo
      - DEVJAVIER-QA
      - Yeiler
      - Maikel
  workflow_dispatch: {}

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Instalar dependencias del sistema
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1 mesa-utils mysql-client

      - name: Instalar dependencias de Python
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Esperar a que MySQL esté listo
        run: |
          for i in $(seq 1 30); do
            if mysql -h 127.0.0.1 -u${{ secrets.MYSQL_USER }} -p${{ secrets.MYSQL_PASSWORD }} -e "SELECT 1;" 2>/dev/null; then
              echo "MySQL está listo."
              break
            fi
            sleep 2
          done

      - name: Importar base de datos
        run: |
          mysql -h 127.0.0.1 -u${{ secrets.MYSQL_USER }} -p${{ secrets.MYSQL_PASSWORD }} ${{ secrets.MYSQL_DATABASE }} < backup/accesobiometrico_v5.0.sql

      - name: Ejecutar Tests con Pytest
        run: |
          pytest tests/unitarias/test_departamento_services.py -v
          pytest -q tests/seguridad/test_seguridad_departamento.py

      - name: Ejecutar pruebas de carga con Locust
        run: |
          mkdir -p output
          locust -f tests/rendimiento/test_rendimiento_departamento.py --headless -u 150 -r 10 --run-time 1m --csv=output/resultados

      - name: Verificar errores en Locust
        run: |
          if [ -f output/resultados_failures.csv ] && grep -q '[1-9]' output/resultados_failures.csv; then
            cat output/resultados_failures.csv
            exit 1
          fi

      - name: Validar rendimiento
        run: |
          avg_response_time=$(awk -F',' '$1 ~ /Insertar Perfil/ {print $5}' output/resultados_stats.csv | tail -n1)
          if (( $(echo "$avg_response_time > 500" | bc -l) )); then
            exit 1
          fi

      - name: Guardar resultados de Locust
        uses: actions/upload-artifact@v4
        with:
          name: resultados-pruebas
          path: output/

      - name: Auto-merge to main
        if: success() && github.ref != 'refs/heads/main'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branch = context.ref.replace('refs/heads/', '');
            await github.rest.repos.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: 'main',
              head: branch
            });

      - name: Enviar correo de éxito
        if: success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: '✅ Éxito en CI/CD - Merge completado'
          body: |
            Las pruebas fueron exitosas y el merge de DEV-QA a MAIN se completó correctamente.
            Detalles: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: GitHub Actions

  notify-failure:
    needs: build-and-test
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Descargar resultados de pruebas
        uses: actions/download-artifact@v3
        with:
          name: resultados-pruebas

      - name: Enviar correo de error
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: '❌ Fallo en CI/CD - Pruebas no pasaron'
          body: |
            Las pruebas fallaron. Por favor revisa los detalles.
            Detalles: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

            Errores:
            $(cat resultados-pruebas/resultados_failures.csv 2>/dev/null || echo "No se encontró archivo de errores")
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: GitHub Actions